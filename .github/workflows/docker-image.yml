name: Deploy Node Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3  # Updated to v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  # Updated to v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3  # Updated to v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/room-booking-app:latest

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Ensure Docker is running and accessible
        run: |
          sudo systemctl start docker
          sudo chmod 666 /var/run/docker.sock  # Give necessary permissions to the socket

      - name: Pull image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/room-booking-app:latest

      - name: Stop and remove old container
        run: |
          docker stop room-booking-app || true
          docker rm room-booking-app || true

      - name: Run Docker Container
        run: |
          docker run -d -p 1997:1997 --name room-booking-app \
            -e DATABASE_CONNECTION="${{ secrets.DATABASE_CONNECTION }}" \
            -e FAST_TO_SMS_KEY="${{ secrets.FAST_TO_SMS_KEY }}" \
            -e JWT_ADMIN_SECRET_KEY="${{ secrets.JWT_ADMIN_SECRET_KEY }}" \
            -e ADMIN_USERNAME="${{ secrets.ADMIN_USERNAME }}" \
            -e ADMIN_EMAIL="${{ secrets.ADMIN_EMAIL }}" \
            -e ADMIN_MOBILE="${{ secrets.ADMIN_MOBILE }}" \
            -e ADMIN_PASSWORD="${{ secrets.ADMIN_PASSWORD }}" \
            -e ADMIN_CPASSWORD="${{ secrets.ADMIN_CPASSWORD }}" \
            -e RAZORPAY_ID="${{ secrets.RAZORPAY_ID }}" \
            -e RAZORPAY_SECRET_ID="${{ secrets.RAZORPAY_SECRET_ID }}" \
            -e CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
            -e CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}" \
            -e CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}" \
            -e EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}" \
            ${{ secrets.DOCKER_USERNAME }}/room-booking-app:latest   
